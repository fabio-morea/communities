% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detection.R
\name{co_occurrence}
\alias{co_occurrence}
\title{Calculate Normalized Co-occurrence Matrix}
\usage{
co_occurrence(M, names, alpha)
}
\arguments{
\item{M}{a matrix where each column represents a community detection result from a different trial, and each row corresponds to a node. The entries in the matrix are community labels indicating which community the node belongs to in each trial.}

\item{names}{A vector of node names corresponding to the rows of the matrix \code{M}.}

\item{alpha}{A numeric vector of weights, where each value represents the importance of the corresponding trial in \code{M}. It is used to weight the contribution of each trial to the final co-occurrence matrix.}
}
\value{
A symmetric matrix \code{CO} where each entry represents the weighted co-occurrence count of node pairs across all trials. The matrix shows how often nodes were grouped together in the same community, scaled by the weights in \code{alpha}.
}
\description{
The \code{co_occurrence} function computes a normalized co-occurrence matrix from a set of community detection solutions. It measures how frequently nodes appear together in the same community across multiple trials and weights the co-occurrence by a specified importance factor \code{alpha} for each trial.
}
\details{
The function uses the results of multiple community detection trials stored in \code{M}. For each trial, nodes that belong to the same community are identified, and their co-occurrence count is incremented by the corresponding value from \code{alpha}. The co-occurrence matrix is symmetric, reflecting the fact that if node A co-occurs with node B, then node B also co-occurs with node A.
}
\examples{
# Assume M is a matrix of community memberships across trials
# and alpha is a vector of weights for each trial.
co_matrix <- co_occurrence(M, names = V(g)$name, alpha = rep(1, ncol(M)))
print(co_matrix)

}
