% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quality.R
\name{quality_check}
\alias{quality_check}
\title{Perform Quality Checks on Community Detection Solutions}
\usage{
quality_check(graph, solution_space_result, mu_max = 0.5)
}
\arguments{
\item{graph}{An igraph object representing the network to be analyzed.}

\item{solution_space_result}{A list object from \code{solutions_space_DM()}
containing \code{partitions} (matrix of community labels for each solution).}

\item{mu_max}{Numeric. Maximum acceptable mixing parameter value (default: 0.5).
Solutions with μ > mu_max are flagged as invalid.}
}
\value{
A tibble with one row per solution containing:
\describe{
\item{\code{solution_id}}{Solution identifier (1 to n_solutions)}
\item{\code{k}}{Number of unique communities}
\item{\code{modularity}}{Newman's modularity score}
\item{\code{mu}}{Empirical mixing parameter}
\item{\code{int_conn}}{Whether all communities are internally connected}
\item{\code{valid}}{Overall validity flag (TRUE/FALSE)}
\item{\code{reason}}{Explanation when valid = FALSE}
}
}
\description{
Evaluates the quality of community detection solutions by computing multiple
metrics including number of communities, modularity, mixing parameter, and
internal connectivity. Flags solutions as valid or invalid based on quality
criteria.
}
\details{
Quality assessment includes:
\itemize{
\item{Number of communities (k)}
\item{Modularity score (higher is better)}
\item{Mixing parameter μ (should be ≤ mu_max)}
\item{Internal connectivity (all communities should be connected)}
}

Validity criteria (all must be satisfied):
\itemize{
\item{μ ≤ mu_max}
\item{k > 1 (more than one community)}
\item{All communities are internally connected}
\item{No missing metric values}
}
}
\examples{
\dontrun{
library(igraph)
graph <- make_ring_of_cliques(4, 5)
solution_space_result <- solutions_space_DM(graph, n_trials = 50)
quality_results <- quality_check(graph, solution_space_result)
print(quality_results)
}

}
