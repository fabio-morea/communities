% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quality.R
\name{quality_check}
\alias{quality_check}
\title{Perform Quality Checks on a Set of Community Detection Solutions}
\usage{
quality_check(g, ssp, mu_max = 0.5)
}
\arguments{
\item{g}{An iGraph object representing the network to be analyzed.}

\item{sol_space}{A list-link object containing the solution space for community detection,
produced by the 'solution_space()' function that is composed of two elements:
\itemize{
\item \code{M}: A matrix of community labels for each solution.
\item \code{data}: A dataframe where each row represents a solution, and columns will be added for
computed metrics like \code{k}, \code{mod}, \code{mu}, \code{int_conn}, and \code{valid}.
}}
}
\value{
The \code{sol_space} object with additional columns in \code{data}:
\itemize{
\item \code{k}: The number of unique communities in each solution.
\item \code{mod}: The modularity score for each solution.
\item \code{mu}: The empirical mixing parameter for each solution.
\item \code{int_conn}: The number of connected components within each community.
\item \code{valid}: A boolean value indicating whether the solution is valid (\code{TRUE}) or invalid (\code{FALSE}), based on a set of criteria.
}
}
\description{
The \code{quality_check} function evaluates the quality of a set of community detection solutions
stored in the \code{sol_space} object. The function computes various metrics, including
the number of communities, modularity, mixing parameter (mu), and internal connectivity.
It also flags solutions as valid or invalid based on certain thresholds.
}
\details{
This function assesses the quality of each community detection solution in the solution space by calculating:
\itemize{
\item The number of unique communities (\code{k}).
\item The modularity score (\code{mod}), which measures the strength of community structure.
\item The mixing parameter (\code{mu}), indicating the proportion of inter-community edges.
\item A flag to highlight Whether communities are internally connected (\code{int_conn}).
\item A flag to signal the validity of each solution. A solution is not valid if any of the following condition applies:
\itemize{
\item \code{mu > 0.5}: If the mixing parameter exceeds 0.5, the solution is marked as invalid.
\item \code{k == 1}: If there is only one community, the solution is marked as invalid.
\item \code{int_conn > 1}: If any community has more than one connected component, the solution is marked as invalid.
}
}
}
\examples{
# Assuming 'g' is a graph and 'sol_space' contains community detection results
sol_space_checked <- quality_check(g, sol_space)
print(sol_space_checked$data)

}
