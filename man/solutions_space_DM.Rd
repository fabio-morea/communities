% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detection.R
\name{solutions_space_DM}
\alias{solutions_space_DM}
\title{Explore Community Detection Solution Space Using Dirichlet-Multinomial Framework}
\usage{
solutions_space_DM(
  graph,
  n_trials = 200,
  method = "IM",
  precision_threshold = 0.05,
  confidence_level = 0.95,
  prior_concentration = 1,
  random_seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{graph}{An \code{igraph} object representing the network to analyze.
Must have at least 2 vertices. Vertex names will be added if missing.}

\item{n_trials}{Integer. Maximum number of algorithm trials to execute (default: 200).}

\item{method}{Character. Community detection algorithm to use. One of:
\itemize{
\item{\code{"IM"}}{Infomap}
\item{\code{"WT"}}{Walktrap}
\item{\code{"LV"}}{Louvain}
\item{\code{"LD"}}{Leiden}
\item{\code{"LP"}}{Label Propagation}
\item{\code{"EV"}}{Leading Eigenvector}
\item{\code{"EB"}}{Edge Betweenness}
}
Default is \code{"IM"}.}

\item{precision_threshold}{Numeric. Maximum allowed width of Beta credible
intervals for early stopping (default: 0.05). Smaller values require more precision.}

\item{confidence_level}{Numeric. Confidence level for credible intervals (default: 0.95).
Must be between 0 and 1.}

\item{prior_concentration}{Numeric. Symmetric Dirichlet prior concentration
parameter (default: 1). Higher values express stronger prior beliefs.}

\item{random_seed}{Optional integer. Random seed for reproducible results.}

\item{verbose}{Logical. Whether to print progress information (default: TRUE).}
}
\value{
A list containing:
\describe{
\item{\code{partitions}}{Matrix (n_vertices Ã— n_solutions) of unique community
assignments found. Each column represents one solution.}
\item{\code{probabilities}}{Data frame with posterior statistics for each solution:
\code{id} (solution identifier), \code{count} (frequency), \code{phat} (posterior mean),
\code{pmin}, \code{pmax} (credible interval bounds).}
\item{\code{log}}{List of convergence diagnostics including \code{stop_trial},
\code{stop_reason}, trial-by-trial counts, and probability evolution matrices.}
}
}
\description{
Systematically explores the solution space of community detection algorithms by
running multiple trials under randomized conditions (vertex permutation) and
modeling solution probabilities using a Dirichlet-Multinomial framework with
Beta credible intervals for convergence assessment.
}
\details{
The algorithm uses vertex permutation to explore different algorithm trajectories,
ensuring solutions are mapped back to the original vertex ordering using vertex names.
Posterior inference assumes a symmetric Dirichlet prior over solution probabilities,
with early stopping when all marginal credible interval widths fall below the
precision threshold.
}
\examples{
\dontrun{
library(igraph)

# Simple example with ring network
ring_graph <- make_ring(20)
result <- solutions_space_DM(ring_graph, n_trials = 50, method = "IM")
print(result$probabilities)

# More complex example with multiple communities
complex_graph <- make_ring_of_cliques(n_cliques = 4, clique_size = 5)
result <- solutions_space_DM(
  graph = complex_graph,
  n_trials = 100,
  precision_threshold = 0.02,
  random_seed = 42
)
}


}
